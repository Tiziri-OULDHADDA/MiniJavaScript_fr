Terminaux inutilisés dans la grammaire

   PRIO1


État 79 conflits: 15 décalage/réduction


Grammaire

    0 $accept: debut $end

    1 debut: programme

    2 programme: commande
    3          | commande programme

    4 commande: ';'
    5         | affect_expr ';'

    6 @1: %empty

    7 commande: FONCTION IDENT @1 '(' arguments ')' '{' programme '}'
    8         | '{' programme '}'
    9         | SI '(' expression ')' commande
   10         | SI '(' expression ')' commande SINON commande
   11         | BREAK ';'
   12         | TANTQUE '(' expression ')' commande
   13         | FAIRE commande TANTQUE '(' expression ')'
   14         | RETOURNER '(' expression ')' ';'
   15         | POUR '(' affect_expr ';' expression ';' expression ')' commande
   16         | ECRIRE '(' expression ')' ';'

   17 affect_expr: expression

   18 @2: %empty

   19 affect_expr: VAR IDENT @2 AFFECT expression
   20            | VAR IDENT

   21 expression: NOMBRE
   22           | BOOLEEN
   23           | STRING
   24           | IDENT
   25           | '(' expression ')'

   26 @3: %empty

   27 expression: IDENT @3 '(' expressions ')'
   28           | op_unair expression
   29           | expression op_binair expression
   30           | expression '?' expression ':' expression

   31 @4: %empty

   32 expression: IDENT @4 assigne expression

   33 expressions: %empty
   34            | expression
   35            | expression ',' expressions

   36 arguments: %empty
   37          | IDENT

   38 @5: %empty

   39 arguments: IDENT @5 ',' arguments

   40 op_unair: MOINS
   41         | NON
   42         | TYPEOF

   43 op_binair: PLUS
   44          | MOINS
   45          | MUL
   46          | DIV
   47          | MODULO
   48          | EGALE3
   49          | INF
   50          | SUP
   51          | DIFF
   52          | ET
   53          | OU
   54          | PUISSANCE
   55          | SUP_EG
   56          | INF_EG

   57 assigne: AFFECT
   58        | PLUS_EG
   59        | MUL_EG
   60        | MOINS_EG
   61        | DIV_EG
   62        | MODULO_EG
   63        | PUISSANCE_EG


Terminaux, suivis des règles où ils apparaissent

$end (0) 0
'(' (40) 7 9 10 12 13 14 15 16 25 27
')' (41) 7 9 10 12 13 14 15 16 25 27
',' (44) 35 39
':' (58) 30
';' (59) 4 5 11 14 15 16
'?' (63) 30
'{' (123) 7 8
'}' (125) 7 8
error (256)
NOMBRE (258) 21
IDENT (259) 7 19 20 24 27 32 37 39
BOOLEEN (260) 22
STRING (261) 23
SI (262) 9 10
SINON (263) 10
FAIRE (264) 13
POUR (265) 15
TANTQUE (266) 12 13
ECRIRE (267) 16
VAR (268) 19 20
FONCTION (269) 7
BREAK (270) 11
RETOURNER (271) 14
NON (272) 41
TYPEOF (273) 42
PLUS (274) 43
MOINS (275) 40 44
MUL (276) 45
DIV (277) 46
MODULO (278) 47
PUISSANCE (279) 54
AFFECT (280) 19 57
ET (281) 52
OU (282) 53
EGALE3 (283) 48
SUP (284) 50
INF (285) 49
DIFF (286) 51
SUP_EG (287) 55
INF_EG (288) 56
PLUS_EG (289) 58
MUL_EG (290) 59
MOINS_EG (291) 60
DIV_EG (292) 61
MODULO_EG (293) 62
PUISSANCE_EG (294) 63
PRIO1 (295)
PRIO2 (296)
PRIO3 (297)
FINSI (298)


Non-terminaux, suivis des règles où ils apparaissent

$accept (52)
    à gauche: 0
debut (53)
    à gauche: 1, à droite: 0
programme (54)
    à gauche: 2 3, à droite: 1 3 7 8
commande (55)
    à gauche: 4 5 7 8 9 10 11 12 13 14 15 16, à droite: 2 3 9 10
    12 13 15
@1 (56)
    à gauche: 6, à droite: 7
affect_expr (57)
    à gauche: 17 19 20, à droite: 5 15
@2 (58)
    à gauche: 18, à droite: 19
expression (59)
    à gauche: 21 22 23 24 25 27 28 29 30 32, à droite: 9 10 12 13
    14 15 16 17 19 25 28 29 30 32 34 35
@3 (60)
    à gauche: 26, à droite: 27
@4 (61)
    à gauche: 31, à droite: 32
expressions (62)
    à gauche: 33 34 35, à droite: 27 35
arguments (63)
    à gauche: 36 37 39, à droite: 7 39
@5 (64)
    à gauche: 38, à droite: 39
op_unair (65)
    à gauche: 40 41 42, à droite: 28
op_binair (66)
    à gauche: 43 44 45 46 47 48 49 50 51 52 53 54 55 56, à droite:
    29
assigne (67)
    à gauche: 57 58 59 60 61 62 63, à droite: 32


État 0

    0 $accept: . debut $end
    1 debut: . programme
    2 programme: . commande
    3          | . commande programme
    4 commande: . ';'
    5         | . affect_expr ';'
    7         | . FONCTION IDENT @1 '(' arguments ')' '{' programme '}'
    8         | . '{' programme '}'
    9         | . SI '(' expression ')' commande
   10         | . SI '(' expression ')' commande SINON commande
   11         | . BREAK ';'
   12         | . TANTQUE '(' expression ')' commande
   13         | . FAIRE commande TANTQUE '(' expression ')'
   14         | . RETOURNER '(' expression ')' ';'
   15         | . POUR '(' affect_expr ';' expression ';' expression ')' commande
   16         | . ECRIRE '(' expression ')' ';'
   17 affect_expr: . expression
   19            | . VAR IDENT @2 AFFECT expression
   20            | . VAR IDENT
   21 expression: . NOMBRE
   22           | . BOOLEEN
   23           | . STRING
   24           | . IDENT
   25           | . '(' expression ')'
   27           | . IDENT @3 '(' expressions ')'
   28           | . op_unair expression
   29           | . expression op_binair expression
   30           | . expression '?' expression ':' expression
   32           | . IDENT @4 assigne expression
   40 op_unair: . MOINS
   41         | . NON
   42         | . TYPEOF

    NOMBRE     décalage et aller à l'état 1
    IDENT      décalage et aller à l'état 2
    BOOLEEN    décalage et aller à l'état 3
    STRING     décalage et aller à l'état 4
    SI         décalage et aller à l'état 5
    FAIRE      décalage et aller à l'état 6
    POUR       décalage et aller à l'état 7
    TANTQUE    décalage et aller à l'état 8
    ECRIRE     décalage et aller à l'état 9
    VAR        décalage et aller à l'état 10
    FONCTION   décalage et aller à l'état 11
    BREAK      décalage et aller à l'état 12
    RETOURNER  décalage et aller à l'état 13
    NON        décalage et aller à l'état 14
    TYPEOF     décalage et aller à l'état 15
    MOINS      décalage et aller à l'état 16
    '('        décalage et aller à l'état 17
    ';'        décalage et aller à l'état 18
    '{'        décalage et aller à l'état 19

    debut        aller à l'état 20
    programme    aller à l'état 21
    commande     aller à l'état 22
    affect_expr  aller à l'état 23
    expression   aller à l'état 24
    op_unair     aller à l'état 25


État 1

   21 expression: NOMBRE .

    $défaut  réduction par utilisation de la règle 21 (expression)


État 2

   24 expression: IDENT .  [PLUS, MOINS, MUL, DIV, MODULO, PUISSANCE, ET, OU, EGALE3, SUP, INF, DIFF, SUP_EG, INF_EG, '?', ':', ')', ';', ',']
   26 @3: . %empty  ['(']
   27 expression: IDENT . @3 '(' expressions ')'
   31 @4: . %empty  [AFFECT, PLUS_EG, MUL_EG, MOINS_EG, DIV_EG, MODULO_EG, PUISSANCE_EG]
   32 expression: IDENT . @4 assigne expression

    AFFECT        réduction par utilisation de la règle 31 (@4)
    PLUS_EG       réduction par utilisation de la règle 31 (@4)
    MUL_EG        réduction par utilisation de la règle 31 (@4)
    MOINS_EG      réduction par utilisation de la règle 31 (@4)
    DIV_EG        réduction par utilisation de la règle 31 (@4)
    MODULO_EG     réduction par utilisation de la règle 31 (@4)
    PUISSANCE_EG  réduction par utilisation de la règle 31 (@4)
    '('           réduction par utilisation de la règle 26 (@3)
    $défaut      réduction par utilisation de la règle 24 (expression)

    @3  aller à l'état 26
    @4  aller à l'état 27


État 3

   22 expression: BOOLEEN .

    $défaut  réduction par utilisation de la règle 22 (expression)


État 4

   23 expression: STRING .

    $défaut  réduction par utilisation de la règle 23 (expression)


État 5

    9 commande: SI . '(' expression ')' commande
   10         | SI . '(' expression ')' commande SINON commande

    '('  décalage et aller à l'état 28


État 6

    4 commande: . ';'
    5         | . affect_expr ';'
    7         | . FONCTION IDENT @1 '(' arguments ')' '{' programme '}'
    8         | . '{' programme '}'
    9         | . SI '(' expression ')' commande
   10         | . SI '(' expression ')' commande SINON commande
   11         | . BREAK ';'
   12         | . TANTQUE '(' expression ')' commande
   13         | . FAIRE commande TANTQUE '(' expression ')'
   13         | FAIRE . commande TANTQUE '(' expression ')'
   14         | . RETOURNER '(' expression ')' ';'
   15         | . POUR '(' affect_expr ';' expression ';' expression ')' commande
   16         | . ECRIRE '(' expression ')' ';'
   17 affect_expr: . expression
   19            | . VAR IDENT @2 AFFECT expression
   20            | . VAR IDENT
   21 expression: . NOMBRE
   22           | . BOOLEEN
   23           | . STRING
   24           | . IDENT
   25           | . '(' expression ')'
   27           | . IDENT @3 '(' expressions ')'
   28           | . op_unair expression
   29           | . expression op_binair expression
   30           | . expression '?' expression ':' expression
   32           | . IDENT @4 assigne expression
   40 op_unair: . MOINS
   41         | . NON
   42         | . TYPEOF

    NOMBRE     décalage et aller à l'état 1
    IDENT      décalage et aller à l'état 2
    BOOLEEN    décalage et aller à l'état 3
    STRING     décalage et aller à l'état 4
    SI         décalage et aller à l'état 5
    FAIRE      décalage et aller à l'état 6
    POUR       décalage et aller à l'état 7
    TANTQUE    décalage et aller à l'état 8
    ECRIRE     décalage et aller à l'état 9
    VAR        décalage et aller à l'état 10
    FONCTION   décalage et aller à l'état 11
    BREAK      décalage et aller à l'état 12
    RETOURNER  décalage et aller à l'état 13
    NON        décalage et aller à l'état 14
    TYPEOF     décalage et aller à l'état 15
    MOINS      décalage et aller à l'état 16
    '('        décalage et aller à l'état 17
    ';'        décalage et aller à l'état 18
    '{'        décalage et aller à l'état 19

    commande     aller à l'état 29
    affect_expr  aller à l'état 23
    expression   aller à l'état 24
    op_unair     aller à l'état 25


État 7

   15 commande: POUR . '(' affect_expr ';' expression ';' expression ')' commande

    '('  décalage et aller à l'état 30


État 8

   12 commande: TANTQUE . '(' expression ')' commande

    '('  décalage et aller à l'état 31


État 9

   16 commande: ECRIRE . '(' expression ')' ';'

    '('  décalage et aller à l'état 32


État 10

   19 affect_expr: VAR . IDENT @2 AFFECT expression
   20            | VAR . IDENT

    IDENT  décalage et aller à l'état 33


État 11

    7 commande: FONCTION . IDENT @1 '(' arguments ')' '{' programme '}'

    IDENT  décalage et aller à l'état 34


État 12

   11 commande: BREAK . ';'

    ';'  décalage et aller à l'état 35


État 13

   14 commande: RETOURNER . '(' expression ')' ';'

    '('  décalage et aller à l'état 36


État 14

   41 op_unair: NON .

    $défaut  réduction par utilisation de la règle 41 (op_unair)


État 15

   42 op_unair: TYPEOF .

    $défaut  réduction par utilisation de la règle 42 (op_unair)


État 16

   40 op_unair: MOINS .

    $défaut  réduction par utilisation de la règle 40 (op_unair)


État 17

   21 expression: . NOMBRE
   22           | . BOOLEEN
   23           | . STRING
   24           | . IDENT
   25           | . '(' expression ')'
   25           | '(' . expression ')'
   27           | . IDENT @3 '(' expressions ')'
   28           | . op_unair expression
   29           | . expression op_binair expression
   30           | . expression '?' expression ':' expression
   32           | . IDENT @4 assigne expression
   40 op_unair: . MOINS
   41         | . NON
   42         | . TYPEOF

    NOMBRE   décalage et aller à l'état 1
    IDENT    décalage et aller à l'état 2
    BOOLEEN  décalage et aller à l'état 3
    STRING   décalage et aller à l'état 4
    NON      décalage et aller à l'état 14
    TYPEOF   décalage et aller à l'état 15
    MOINS    décalage et aller à l'état 16
    '('      décalage et aller à l'état 17

    expression  aller à l'état 37
    op_unair    aller à l'état 25


État 18

    4 commande: ';' .

    $défaut  réduction par utilisation de la règle 4 (commande)


État 19

    2 programme: . commande
    3          | . commande programme
    4 commande: . ';'
    5         | . affect_expr ';'
    7         | . FONCTION IDENT @1 '(' arguments ')' '{' programme '}'
    8         | . '{' programme '}'
    8         | '{' . programme '}'
    9         | . SI '(' expression ')' commande
   10         | . SI '(' expression ')' commande SINON commande
   11         | . BREAK ';'
   12         | . TANTQUE '(' expression ')' commande
   13         | . FAIRE commande TANTQUE '(' expression ')'
   14         | . RETOURNER '(' expression ')' ';'
   15         | . POUR '(' affect_expr ';' expression ';' expression ')' commande
   16         | . ECRIRE '(' expression ')' ';'
   17 affect_expr: . expression
   19            | . VAR IDENT @2 AFFECT expression
   20            | . VAR IDENT
   21 expression: . NOMBRE
   22           | . BOOLEEN
   23           | . STRING
   24           | . IDENT
   25           | . '(' expression ')'
   27           | . IDENT @3 '(' expressions ')'
   28           | . op_unair expression
   29           | . expression op_binair expression
   30           | . expression '?' expression ':' expression
   32           | . IDENT @4 assigne expression
   40 op_unair: . MOINS
   41         | . NON
   42         | . TYPEOF

    NOMBRE     décalage et aller à l'état 1
    IDENT      décalage et aller à l'état 2
    BOOLEEN    décalage et aller à l'état 3
    STRING     décalage et aller à l'état 4
    SI         décalage et aller à l'état 5
    FAIRE      décalage et aller à l'état 6
    POUR       décalage et aller à l'état 7
    TANTQUE    décalage et aller à l'état 8
    ECRIRE     décalage et aller à l'état 9
    VAR        décalage et aller à l'état 10
    FONCTION   décalage et aller à l'état 11
    BREAK      décalage et aller à l'état 12
    RETOURNER  décalage et aller à l'état 13
    NON        décalage et aller à l'état 14
    TYPEOF     décalage et aller à l'état 15
    MOINS      décalage et aller à l'état 16
    '('        décalage et aller à l'état 17
    ';'        décalage et aller à l'état 18
    '{'        décalage et aller à l'état 19

    programme    aller à l'état 38
    commande     aller à l'état 22
    affect_expr  aller à l'état 23
    expression   aller à l'état 24
    op_unair     aller à l'état 25


État 20

    0 $accept: debut . $end

    $end  décalage et aller à l'état 39


État 21

    1 debut: programme .

    $défaut  réduction par utilisation de la règle 1 (debut)


État 22

    2 programme: . commande
    2          | commande .  [$end, '}']
    3          | . commande programme
    3          | commande . programme
    4 commande: . ';'
    5         | . affect_expr ';'
    7         | . FONCTION IDENT @1 '(' arguments ')' '{' programme '}'
    8         | . '{' programme '}'
    9         | . SI '(' expression ')' commande
   10         | . SI '(' expression ')' commande SINON commande
   11         | . BREAK ';'
   12         | . TANTQUE '(' expression ')' commande
   13         | . FAIRE commande TANTQUE '(' expression ')'
   14         | . RETOURNER '(' expression ')' ';'
   15         | . POUR '(' affect_expr ';' expression ';' expression ')' commande
   16         | . ECRIRE '(' expression ')' ';'
   17 affect_expr: . expression
   19            | . VAR IDENT @2 AFFECT expression
   20            | . VAR IDENT
   21 expression: . NOMBRE
   22           | . BOOLEEN
   23           | . STRING
   24           | . IDENT
   25           | . '(' expression ')'
   27           | . IDENT @3 '(' expressions ')'
   28           | . op_unair expression
   29           | . expression op_binair expression
   30           | . expression '?' expression ':' expression
   32           | . IDENT @4 assigne expression
   40 op_unair: . MOINS
   41         | . NON
   42         | . TYPEOF

    NOMBRE     décalage et aller à l'état 1
    IDENT      décalage et aller à l'état 2
    BOOLEEN    décalage et aller à l'état 3
    STRING     décalage et aller à l'état 4
    SI         décalage et aller à l'état 5
    FAIRE      décalage et aller à l'état 6
    POUR       décalage et aller à l'état 7
    TANTQUE    décalage et aller à l'état 8
    ECRIRE     décalage et aller à l'état 9
    VAR        décalage et aller à l'état 10
    FONCTION   décalage et aller à l'état 11
    BREAK      décalage et aller à l'état 12
    RETOURNER  décalage et aller à l'état 13
    NON        décalage et aller à l'état 14
    TYPEOF     décalage et aller à l'état 15
    MOINS      décalage et aller à l'état 16
    '('        décalage et aller à l'état 17
    ';'        décalage et aller à l'état 18
    '{'        décalage et aller à l'état 19

    $défaut  réduction par utilisation de la règle 2 (programme)

    programme    aller à l'état 40
    commande     aller à l'état 22
    affect_expr  aller à l'état 23
    expression   aller à l'état 24
    op_unair     aller à l'état 25


État 23

    5 commande: affect_expr . ';'

    ';'  décalage et aller à l'état 41


État 24

   17 affect_expr: expression .  [';']
   29 expression: expression . op_binair expression
   30           | expression . '?' expression ':' expression
   43 op_binair: . PLUS
   44          | . MOINS
   45          | . MUL
   46          | . DIV
   47          | . MODULO
   48          | . EGALE3
   49          | . INF
   50          | . SUP
   51          | . DIFF
   52          | . ET
   53          | . OU
   54          | . PUISSANCE
   55          | . SUP_EG
   56          | . INF_EG

    PLUS       décalage et aller à l'état 42
    MOINS      décalage et aller à l'état 43
    MUL        décalage et aller à l'état 44
    DIV        décalage et aller à l'état 45
    MODULO     décalage et aller à l'état 46
    PUISSANCE  décalage et aller à l'état 47
    ET         décalage et aller à l'état 48
    OU         décalage et aller à l'état 49
    EGALE3     décalage et aller à l'état 50
    SUP        décalage et aller à l'état 51
    INF        décalage et aller à l'état 52
    DIFF       décalage et aller à l'état 53
    SUP_EG     décalage et aller à l'état 54
    INF_EG     décalage et aller à l'état 55
    '?'        décalage et aller à l'état 56

    $défaut  réduction par utilisation de la règle 17 (affect_expr)

    op_binair  aller à l'état 57


État 25

   21 expression: . NOMBRE
   22           | . BOOLEEN
   23           | . STRING
   24           | . IDENT
   25           | . '(' expression ')'
   27           | . IDENT @3 '(' expressions ')'
   28           | . op_unair expression
   28           | op_unair . expression
   29           | . expression op_binair expression
   30           | . expression '?' expression ':' expression
   32           | . IDENT @4 assigne expression
   40 op_unair: . MOINS
   41         | . NON
   42         | . TYPEOF

    NOMBRE   décalage et aller à l'état 1
    IDENT    décalage et aller à l'état 2
    BOOLEEN  décalage et aller à l'état 3
    STRING   décalage et aller à l'état 4
    NON      décalage et aller à l'état 14
    TYPEOF   décalage et aller à l'état 15
    MOINS    décalage et aller à l'état 16
    '('      décalage et aller à l'état 17

    expression  aller à l'état 58
    op_unair    aller à l'état 25


État 26

   27 expression: IDENT @3 . '(' expressions ')'

    '('  décalage et aller à l'état 59


État 27

   32 expression: IDENT @4 . assigne expression
   57 assigne: . AFFECT
   58        | . PLUS_EG
   59        | . MUL_EG
   60        | . MOINS_EG
   61        | . DIV_EG
   62        | . MODULO_EG
   63        | . PUISSANCE_EG

    AFFECT        décalage et aller à l'état 60
    PLUS_EG       décalage et aller à l'état 61
    MUL_EG        décalage et aller à l'état 62
    MOINS_EG      décalage et aller à l'état 63
    DIV_EG        décalage et aller à l'état 64
    MODULO_EG     décalage et aller à l'état 65
    PUISSANCE_EG  décalage et aller à l'état 66

    assigne  aller à l'état 67


État 28

    9 commande: SI '(' . expression ')' commande
   10         | SI '(' . expression ')' commande SINON commande
   21 expression: . NOMBRE
   22           | . BOOLEEN
   23           | . STRING
   24           | . IDENT
   25           | . '(' expression ')'
   27           | . IDENT @3 '(' expressions ')'
   28           | . op_unair expression
   29           | . expression op_binair expression
   30           | . expression '?' expression ':' expression
   32           | . IDENT @4 assigne expression
   40 op_unair: . MOINS
   41         | . NON
   42         | . TYPEOF

    NOMBRE   décalage et aller à l'état 1
    IDENT    décalage et aller à l'état 2
    BOOLEEN  décalage et aller à l'état 3
    STRING   décalage et aller à l'état 4
    NON      décalage et aller à l'état 14
    TYPEOF   décalage et aller à l'état 15
    MOINS    décalage et aller à l'état 16
    '('      décalage et aller à l'état 17

    expression  aller à l'état 68
    op_unair    aller à l'état 25


État 29

   13 commande: FAIRE commande . TANTQUE '(' expression ')'

    TANTQUE  décalage et aller à l'état 69


État 30

   15 commande: POUR '(' . affect_expr ';' expression ';' expression ')' commande
   17 affect_expr: . expression
   19            | . VAR IDENT @2 AFFECT expression
   20            | . VAR IDENT
   21 expression: . NOMBRE
   22           | . BOOLEEN
   23           | . STRING
   24           | . IDENT
   25           | . '(' expression ')'
   27           | . IDENT @3 '(' expressions ')'
   28           | . op_unair expression
   29           | . expression op_binair expression
   30           | . expression '?' expression ':' expression
   32           | . IDENT @4 assigne expression
   40 op_unair: . MOINS
   41         | . NON
   42         | . TYPEOF

    NOMBRE   décalage et aller à l'état 1
    IDENT    décalage et aller à l'état 2
    BOOLEEN  décalage et aller à l'état 3
    STRING   décalage et aller à l'état 4
    VAR      décalage et aller à l'état 10
    NON      décalage et aller à l'état 14
    TYPEOF   décalage et aller à l'état 15
    MOINS    décalage et aller à l'état 16
    '('      décalage et aller à l'état 17

    affect_expr  aller à l'état 70
    expression   aller à l'état 24
    op_unair     aller à l'état 25


État 31

   12 commande: TANTQUE '(' . expression ')' commande
   21 expression: . NOMBRE
   22           | . BOOLEEN
   23           | . STRING
   24           | . IDENT
   25           | . '(' expression ')'
   27           | . IDENT @3 '(' expressions ')'
   28           | . op_unair expression
   29           | . expression op_binair expression
   30           | . expression '?' expression ':' expression
   32           | . IDENT @4 assigne expression
   40 op_unair: . MOINS
   41         | . NON
   42         | . TYPEOF

    NOMBRE   décalage et aller à l'état 1
    IDENT    décalage et aller à l'état 2
    BOOLEEN  décalage et aller à l'état 3
    STRING   décalage et aller à l'état 4
    NON      décalage et aller à l'état 14
    TYPEOF   décalage et aller à l'état 15
    MOINS    décalage et aller à l'état 16
    '('      décalage et aller à l'état 17

    expression  aller à l'état 71
    op_unair    aller à l'état 25


État 32

   16 commande: ECRIRE '(' . expression ')' ';'
   21 expression: . NOMBRE
   22           | . BOOLEEN
   23           | . STRING
   24           | . IDENT
   25           | . '(' expression ')'
   27           | . IDENT @3 '(' expressions ')'
   28           | . op_unair expression
   29           | . expression op_binair expression
   30           | . expression '?' expression ':' expression
   32           | . IDENT @4 assigne expression
   40 op_unair: . MOINS
   41         | . NON
   42         | . TYPEOF

    NOMBRE   décalage et aller à l'état 1
    IDENT    décalage et aller à l'état 2
    BOOLEEN  décalage et aller à l'état 3
    STRING   décalage et aller à l'état 4
    NON      décalage et aller à l'état 14
    TYPEOF   décalage et aller à l'état 15
    MOINS    décalage et aller à l'état 16
    '('      décalage et aller à l'état 17

    expression  aller à l'état 72
    op_unair    aller à l'état 25


État 33

   18 @2: . %empty  [AFFECT]
   19 affect_expr: VAR IDENT . @2 AFFECT expression
   20            | VAR IDENT .  [';']

    ';'       réduction par utilisation de la règle 20 (affect_expr)
    $défaut  réduction par utilisation de la règle 18 (@2)

    @2  aller à l'état 73


État 34

    6 @1: . %empty
    7 commande: FONCTION IDENT . @1 '(' arguments ')' '{' programme '}'

    $défaut  réduction par utilisation de la règle 6 (@1)

    @1  aller à l'état 74


État 35

   11 commande: BREAK ';' .

    $défaut  réduction par utilisation de la règle 11 (commande)


État 36

   14 commande: RETOURNER '(' . expression ')' ';'
   21 expression: . NOMBRE
   22           | . BOOLEEN
   23           | . STRING
   24           | . IDENT
   25           | . '(' expression ')'
   27           | . IDENT @3 '(' expressions ')'
   28           | . op_unair expression
   29           | . expression op_binair expression
   30           | . expression '?' expression ':' expression
   32           | . IDENT @4 assigne expression
   40 op_unair: . MOINS
   41         | . NON
   42         | . TYPEOF

    NOMBRE   décalage et aller à l'état 1
    IDENT    décalage et aller à l'état 2
    BOOLEEN  décalage et aller à l'état 3
    STRING   décalage et aller à l'état 4
    NON      décalage et aller à l'état 14
    TYPEOF   décalage et aller à l'état 15
    MOINS    décalage et aller à l'état 16
    '('      décalage et aller à l'état 17

    expression  aller à l'état 75
    op_unair    aller à l'état 25


État 37

   25 expression: '(' expression . ')'
   29           | expression . op_binair expression
   30           | expression . '?' expression ':' expression
   43 op_binair: . PLUS
   44          | . MOINS
   45          | . MUL
   46          | . DIV
   47          | . MODULO
   48          | . EGALE3
   49          | . INF
   50          | . SUP
   51          | . DIFF
   52          | . ET
   53          | . OU
   54          | . PUISSANCE
   55          | . SUP_EG
   56          | . INF_EG

    PLUS       décalage et aller à l'état 42
    MOINS      décalage et aller à l'état 43
    MUL        décalage et aller à l'état 44
    DIV        décalage et aller à l'état 45
    MODULO     décalage et aller à l'état 46
    PUISSANCE  décalage et aller à l'état 47
    ET         décalage et aller à l'état 48
    OU         décalage et aller à l'état 49
    EGALE3     décalage et aller à l'état 50
    SUP        décalage et aller à l'état 51
    INF        décalage et aller à l'état 52
    DIFF       décalage et aller à l'état 53
    SUP_EG     décalage et aller à l'état 54
    INF_EG     décalage et aller à l'état 55
    '?'        décalage et aller à l'état 56
    ')'        décalage et aller à l'état 76

    op_binair  aller à l'état 57


État 38

    8 commande: '{' programme . '}'

    '}'  décalage et aller à l'état 77


État 39

    0 $accept: debut $end .

    $défaut  accepter


État 40

    3 programme: commande programme .

    $défaut  réduction par utilisation de la règle 3 (programme)


État 41

    5 commande: affect_expr ';' .

    $défaut  réduction par utilisation de la règle 5 (commande)


État 42

   43 op_binair: PLUS .

    $défaut  réduction par utilisation de la règle 43 (op_binair)


État 43

   44 op_binair: MOINS .

    $défaut  réduction par utilisation de la règle 44 (op_binair)


État 44

   45 op_binair: MUL .

    $défaut  réduction par utilisation de la règle 45 (op_binair)


État 45

   46 op_binair: DIV .

    $défaut  réduction par utilisation de la règle 46 (op_binair)


État 46

   47 op_binair: MODULO .

    $défaut  réduction par utilisation de la règle 47 (op_binair)


État 47

   54 op_binair: PUISSANCE .

    $défaut  réduction par utilisation de la règle 54 (op_binair)


État 48

   52 op_binair: ET .

    $défaut  réduction par utilisation de la règle 52 (op_binair)


État 49

   53 op_binair: OU .

    $défaut  réduction par utilisation de la règle 53 (op_binair)


État 50

   48 op_binair: EGALE3 .

    $défaut  réduction par utilisation de la règle 48 (op_binair)


État 51

   50 op_binair: SUP .

    $défaut  réduction par utilisation de la règle 50 (op_binair)


État 52

   49 op_binair: INF .

    $défaut  réduction par utilisation de la règle 49 (op_binair)


État 53

   51 op_binair: DIFF .

    $défaut  réduction par utilisation de la règle 51 (op_binair)


État 54

   55 op_binair: SUP_EG .

    $défaut  réduction par utilisation de la règle 55 (op_binair)


État 55

   56 op_binair: INF_EG .

    $défaut  réduction par utilisation de la règle 56 (op_binair)


État 56

   21 expression: . NOMBRE
   22           | . BOOLEEN
   23           | . STRING
   24           | . IDENT
   25           | . '(' expression ')'
   27           | . IDENT @3 '(' expressions ')'
   28           | . op_unair expression
   29           | . expression op_binair expression
   30           | . expression '?' expression ':' expression
   30           | expression '?' . expression ':' expression
   32           | . IDENT @4 assigne expression
   40 op_unair: . MOINS
   41         | . NON
   42         | . TYPEOF

    NOMBRE   décalage et aller à l'état 1
    IDENT    décalage et aller à l'état 2
    BOOLEEN  décalage et aller à l'état 3
    STRING   décalage et aller à l'état 4
    NON      décalage et aller à l'état 14
    TYPEOF   décalage et aller à l'état 15
    MOINS    décalage et aller à l'état 16
    '('      décalage et aller à l'état 17

    expression  aller à l'état 78
    op_unair    aller à l'état 25


État 57

   21 expression: . NOMBRE
   22           | . BOOLEEN
   23           | . STRING
   24           | . IDENT
   25           | . '(' expression ')'
   27           | . IDENT @3 '(' expressions ')'
   28           | . op_unair expression
   29           | . expression op_binair expression
   29           | expression op_binair . expression
   30           | . expression '?' expression ':' expression
   32           | . IDENT @4 assigne expression
   40 op_unair: . MOINS
   41         | . NON
   42         | . TYPEOF

    NOMBRE   décalage et aller à l'état 1
    IDENT    décalage et aller à l'état 2
    BOOLEEN  décalage et aller à l'état 3
    STRING   décalage et aller à l'état 4
    NON      décalage et aller à l'état 14
    TYPEOF   décalage et aller à l'état 15
    MOINS    décalage et aller à l'état 16
    '('      décalage et aller à l'état 17

    expression  aller à l'état 79
    op_unair    aller à l'état 25


État 58

   28 expression: op_unair expression .  [PLUS, MOINS, MUL, DIV, MODULO, PUISSANCE, ET, OU, EGALE3, SUP, INF, DIFF, SUP_EG, INF_EG, '?', ':', ')', ';', ',']
   29           | expression . op_binair expression
   30           | expression . '?' expression ':' expression
   43 op_binair: . PLUS
   44          | . MOINS
   45          | . MUL
   46          | . DIV
   47          | . MODULO
   48          | . EGALE3
   49          | . INF
   50          | . SUP
   51          | . DIFF
   52          | . ET
   53          | . OU
   54          | . PUISSANCE
   55          | . SUP_EG
   56          | . INF_EG

    $défaut  réduction par utilisation de la règle 28 (expression)

    op_binair  aller à l'état 57

    Conflit entre la règle 28 et le jeton PLUS résolu par réduction (PLUS < PRIO3).
    Conflit entre la règle 28 et le jeton MOINS résolu par réduction (MOINS < PRIO3).
    Conflit entre la règle 28 et le jeton MUL résolu par réduction (MUL < PRIO3).
    Conflit entre la règle 28 et le jeton DIV résolu par réduction (DIV < PRIO3).
    Conflit entre la règle 28 et le jeton MODULO résolu par réduction (MODULO < PRIO3).
    Conflit entre la règle 28 et le jeton PUISSANCE résolu par réduction (PUISSANCE < PRIO3).
    Conflit entre la règle 28 et le jeton ET résolu par réduction (ET < PRIO3).
    Conflit entre la règle 28 et le jeton OU résolu par réduction (OU < PRIO3).
    Conflit entre la règle 28 et le jeton EGALE3 résolu par réduction (EGALE3 < PRIO3).
    Conflit entre la règle 28 et le jeton SUP résolu par réduction (SUP < PRIO3).
    Conflit entre la règle 28 et le jeton INF résolu par réduction (INF < PRIO3).
    Conflit entre la règle 28 et le jeton DIFF résolu par réduction (DIFF < PRIO3).
    Conflit entre la règle 28 et le jeton SUP_EG résolu par réduction (SUP_EG < PRIO3).
    Conflit entre la règle 28 et le jeton INF_EG résolu par réduction (INF_EG < PRIO3).
    Conflit entre la règle 28 et le jeton '?' résolu par réduction ('?' < PRIO3).


État 59

   21 expression: . NOMBRE
   22           | . BOOLEEN
   23           | . STRING
   24           | . IDENT
   25           | . '(' expression ')'
   27           | . IDENT @3 '(' expressions ')'
   27           | IDENT @3 '(' . expressions ')'
   28           | . op_unair expression
   29           | . expression op_binair expression
   30           | . expression '?' expression ':' expression
   32           | . IDENT @4 assigne expression
   33 expressions: . %empty  [')']
   34            | . expression
   35            | . expression ',' expressions
   40 op_unair: . MOINS
   41         | . NON
   42         | . TYPEOF

    NOMBRE   décalage et aller à l'état 1
    IDENT    décalage et aller à l'état 2
    BOOLEEN  décalage et aller à l'état 3
    STRING   décalage et aller à l'état 4
    NON      décalage et aller à l'état 14
    TYPEOF   décalage et aller à l'état 15
    MOINS    décalage et aller à l'état 16
    '('      décalage et aller à l'état 17

    $défaut  réduction par utilisation de la règle 33 (expressions)

    expression   aller à l'état 80
    expressions  aller à l'état 81
    op_unair     aller à l'état 25


État 60

   57 assigne: AFFECT .

    $défaut  réduction par utilisation de la règle 57 (assigne)


État 61

   58 assigne: PLUS_EG .

    $défaut  réduction par utilisation de la règle 58 (assigne)


État 62

   59 assigne: MUL_EG .

    $défaut  réduction par utilisation de la règle 59 (assigne)


État 63

   60 assigne: MOINS_EG .

    $défaut  réduction par utilisation de la règle 60 (assigne)


État 64

   61 assigne: DIV_EG .

    $défaut  réduction par utilisation de la règle 61 (assigne)


État 65

   62 assigne: MODULO_EG .

    $défaut  réduction par utilisation de la règle 62 (assigne)


État 66

   63 assigne: PUISSANCE_EG .

    $défaut  réduction par utilisation de la règle 63 (assigne)


État 67

   21 expression: . NOMBRE
   22           | . BOOLEEN
   23           | . STRING
   24           | . IDENT
   25           | . '(' expression ')'
   27           | . IDENT @3 '(' expressions ')'
   28           | . op_unair expression
   29           | . expression op_binair expression
   30           | . expression '?' expression ':' expression
   32           | . IDENT @4 assigne expression
   32           | IDENT @4 assigne . expression
   40 op_unair: . MOINS
   41         | . NON
   42         | . TYPEOF

    NOMBRE   décalage et aller à l'état 1
    IDENT    décalage et aller à l'état 2
    BOOLEEN  décalage et aller à l'état 3
    STRING   décalage et aller à l'état 4
    NON      décalage et aller à l'état 14
    TYPEOF   décalage et aller à l'état 15
    MOINS    décalage et aller à l'état 16
    '('      décalage et aller à l'état 17

    expression  aller à l'état 82
    op_unair    aller à l'état 25


État 68

    9 commande: SI '(' expression . ')' commande
   10         | SI '(' expression . ')' commande SINON commande
   29 expression: expression . op_binair expression
   30           | expression . '?' expression ':' expression
   43 op_binair: . PLUS
   44          | . MOINS
   45          | . MUL
   46          | . DIV
   47          | . MODULO
   48          | . EGALE3
   49          | . INF
   50          | . SUP
   51          | . DIFF
   52          | . ET
   53          | . OU
   54          | . PUISSANCE
   55          | . SUP_EG
   56          | . INF_EG

    PLUS       décalage et aller à l'état 42
    MOINS      décalage et aller à l'état 43
    MUL        décalage et aller à l'état 44
    DIV        décalage et aller à l'état 45
    MODULO     décalage et aller à l'état 46
    PUISSANCE  décalage et aller à l'état 47
    ET         décalage et aller à l'état 48
    OU         décalage et aller à l'état 49
    EGALE3     décalage et aller à l'état 50
    SUP        décalage et aller à l'état 51
    INF        décalage et aller à l'état 52
    DIFF       décalage et aller à l'état 53
    SUP_EG     décalage et aller à l'état 54
    INF_EG     décalage et aller à l'état 55
    '?'        décalage et aller à l'état 56
    ')'        décalage et aller à l'état 83

    op_binair  aller à l'état 57


État 69

   13 commande: FAIRE commande TANTQUE . '(' expression ')'

    '('  décalage et aller à l'état 84


État 70

   15 commande: POUR '(' affect_expr . ';' expression ';' expression ')' commande

    ';'  décalage et aller à l'état 85


État 71

   12 commande: TANTQUE '(' expression . ')' commande
   29 expression: expression . op_binair expression
   30           | expression . '?' expression ':' expression
   43 op_binair: . PLUS
   44          | . MOINS
   45          | . MUL
   46          | . DIV
   47          | . MODULO
   48          | . EGALE3
   49          | . INF
   50          | . SUP
   51          | . DIFF
   52          | . ET
   53          | . OU
   54          | . PUISSANCE
   55          | . SUP_EG
   56          | . INF_EG

    PLUS       décalage et aller à l'état 42
    MOINS      décalage et aller à l'état 43
    MUL        décalage et aller à l'état 44
    DIV        décalage et aller à l'état 45
    MODULO     décalage et aller à l'état 46
    PUISSANCE  décalage et aller à l'état 47
    ET         décalage et aller à l'état 48
    OU         décalage et aller à l'état 49
    EGALE3     décalage et aller à l'état 50
    SUP        décalage et aller à l'état 51
    INF        décalage et aller à l'état 52
    DIFF       décalage et aller à l'état 53
    SUP_EG     décalage et aller à l'état 54
    INF_EG     décalage et aller à l'état 55
    '?'        décalage et aller à l'état 56
    ')'        décalage et aller à l'état 86

    op_binair  aller à l'état 57


État 72

   16 commande: ECRIRE '(' expression . ')' ';'
   29 expression: expression . op_binair expression
   30           | expression . '?' expression ':' expression
   43 op_binair: . PLUS
   44          | . MOINS
   45          | . MUL
   46          | . DIV
   47          | . MODULO
   48          | . EGALE3
   49          | . INF
   50          | . SUP
   51          | . DIFF
   52          | . ET
   53          | . OU
   54          | . PUISSANCE
   55          | . SUP_EG
   56          | . INF_EG

    PLUS       décalage et aller à l'état 42
    MOINS      décalage et aller à l'état 43
    MUL        décalage et aller à l'état 44
    DIV        décalage et aller à l'état 45
    MODULO     décalage et aller à l'état 46
    PUISSANCE  décalage et aller à l'état 47
    ET         décalage et aller à l'état 48
    OU         décalage et aller à l'état 49
    EGALE3     décalage et aller à l'état 50
    SUP        décalage et aller à l'état 51
    INF        décalage et aller à l'état 52
    DIFF       décalage et aller à l'état 53
    SUP_EG     décalage et aller à l'état 54
    INF_EG     décalage et aller à l'état 55
    '?'        décalage et aller à l'état 56
    ')'        décalage et aller à l'état 87

    op_binair  aller à l'état 57


État 73

   19 affect_expr: VAR IDENT @2 . AFFECT expression

    AFFECT  décalage et aller à l'état 88


État 74

    7 commande: FONCTION IDENT @1 . '(' arguments ')' '{' programme '}'

    '('  décalage et aller à l'état 89


État 75

   14 commande: RETOURNER '(' expression . ')' ';'
   29 expression: expression . op_binair expression
   30           | expression . '?' expression ':' expression
   43 op_binair: . PLUS
   44          | . MOINS
   45          | . MUL
   46          | . DIV
   47          | . MODULO
   48          | . EGALE3
   49          | . INF
   50          | . SUP
   51          | . DIFF
   52          | . ET
   53          | . OU
   54          | . PUISSANCE
   55          | . SUP_EG
   56          | . INF_EG

    PLUS       décalage et aller à l'état 42
    MOINS      décalage et aller à l'état 43
    MUL        décalage et aller à l'état 44
    DIV        décalage et aller à l'état 45
    MODULO     décalage et aller à l'état 46
    PUISSANCE  décalage et aller à l'état 47
    ET         décalage et aller à l'état 48
    OU         décalage et aller à l'état 49
    EGALE3     décalage et aller à l'état 50
    SUP        décalage et aller à l'état 51
    INF        décalage et aller à l'état 52
    DIFF       décalage et aller à l'état 53
    SUP_EG     décalage et aller à l'état 54
    INF_EG     décalage et aller à l'état 55
    '?'        décalage et aller à l'état 56
    ')'        décalage et aller à l'état 90

    op_binair  aller à l'état 57


État 76

   25 expression: '(' expression ')' .

    $défaut  réduction par utilisation de la règle 25 (expression)


État 77

    8 commande: '{' programme '}' .

    $défaut  réduction par utilisation de la règle 8 (commande)


État 78

   29 expression: expression . op_binair expression
   30           | expression . '?' expression ':' expression
   30           | expression '?' expression . ':' expression
   43 op_binair: . PLUS
   44          | . MOINS
   45          | . MUL
   46          | . DIV
   47          | . MODULO
   48          | . EGALE3
   49          | . INF
   50          | . SUP
   51          | . DIFF
   52          | . ET
   53          | . OU
   54          | . PUISSANCE
   55          | . SUP_EG
   56          | . INF_EG

    PLUS       décalage et aller à l'état 42
    MOINS      décalage et aller à l'état 43
    MUL        décalage et aller à l'état 44
    DIV        décalage et aller à l'état 45
    MODULO     décalage et aller à l'état 46
    PUISSANCE  décalage et aller à l'état 47
    ET         décalage et aller à l'état 48
    OU         décalage et aller à l'état 49
    EGALE3     décalage et aller à l'état 50
    SUP        décalage et aller à l'état 51
    INF        décalage et aller à l'état 52
    DIFF       décalage et aller à l'état 53
    SUP_EG     décalage et aller à l'état 54
    INF_EG     décalage et aller à l'état 55
    '?'        décalage et aller à l'état 56
    ':'        décalage et aller à l'état 91

    op_binair  aller à l'état 57


État 79

   29 expression: expression . op_binair expression
   29           | expression op_binair expression .  [PLUS, MOINS, MUL, DIV, MODULO, PUISSANCE, ET, OU, EGALE3, SUP, INF, DIFF, SUP_EG, INF_EG, '?', ':', ')', ';', ',']
   30           | expression . '?' expression ':' expression
   43 op_binair: . PLUS
   44          | . MOINS
   45          | . MUL
   46          | . DIV
   47          | . MODULO
   48          | . EGALE3
   49          | . INF
   50          | . SUP
   51          | . DIFF
   52          | . ET
   53          | . OU
   54          | . PUISSANCE
   55          | . SUP_EG
   56          | . INF_EG

    PLUS       décalage et aller à l'état 42
    MOINS      décalage et aller à l'état 43
    MUL        décalage et aller à l'état 44
    DIV        décalage et aller à l'état 45
    MODULO     décalage et aller à l'état 46
    PUISSANCE  décalage et aller à l'état 47
    ET         décalage et aller à l'état 48
    OU         décalage et aller à l'état 49
    EGALE3     décalage et aller à l'état 50
    SUP        décalage et aller à l'état 51
    INF        décalage et aller à l'état 52
    DIFF       décalage et aller à l'état 53
    SUP_EG     décalage et aller à l'état 54
    INF_EG     décalage et aller à l'état 55
    '?'        décalage et aller à l'état 56

    PLUS       [réduction par utilisation de la règle 29 (expression)]
    MOINS      [réduction par utilisation de la règle 29 (expression)]
    MUL        [réduction par utilisation de la règle 29 (expression)]
    DIV        [réduction par utilisation de la règle 29 (expression)]
    MODULO     [réduction par utilisation de la règle 29 (expression)]
    PUISSANCE  [réduction par utilisation de la règle 29 (expression)]
    ET         [réduction par utilisation de la règle 29 (expression)]
    OU         [réduction par utilisation de la règle 29 (expression)]
    EGALE3     [réduction par utilisation de la règle 29 (expression)]
    SUP        [réduction par utilisation de la règle 29 (expression)]
    INF        [réduction par utilisation de la règle 29 (expression)]
    DIFF       [réduction par utilisation de la règle 29 (expression)]
    SUP_EG     [réduction par utilisation de la règle 29 (expression)]
    INF_EG     [réduction par utilisation de la règle 29 (expression)]
    '?'        [réduction par utilisation de la règle 29 (expression)]
    $défaut   réduction par utilisation de la règle 29 (expression)

    op_binair  aller à l'état 57


État 80

   29 expression: expression . op_binair expression
   30           | expression . '?' expression ':' expression
   34 expressions: expression .  [')']
   35            | expression . ',' expressions
   43 op_binair: . PLUS
   44          | . MOINS
   45          | . MUL
   46          | . DIV
   47          | . MODULO
   48          | . EGALE3
   49          | . INF
   50          | . SUP
   51          | . DIFF
   52          | . ET
   53          | . OU
   54          | . PUISSANCE
   55          | . SUP_EG
   56          | . INF_EG

    PLUS       décalage et aller à l'état 42
    MOINS      décalage et aller à l'état 43
    MUL        décalage et aller à l'état 44
    DIV        décalage et aller à l'état 45
    MODULO     décalage et aller à l'état 46
    PUISSANCE  décalage et aller à l'état 47
    ET         décalage et aller à l'état 48
    OU         décalage et aller à l'état 49
    EGALE3     décalage et aller à l'état 50
    SUP        décalage et aller à l'état 51
    INF        décalage et aller à l'état 52
    DIFF       décalage et aller à l'état 53
    SUP_EG     décalage et aller à l'état 54
    INF_EG     décalage et aller à l'état 55
    '?'        décalage et aller à l'état 56
    ','        décalage et aller à l'état 92

    $défaut  réduction par utilisation de la règle 34 (expressions)

    op_binair  aller à l'état 57


État 81

   27 expression: IDENT @3 '(' expressions . ')'

    ')'  décalage et aller à l'état 93


État 82

   29 expression: expression . op_binair expression
   30           | expression . '?' expression ':' expression
   32           | IDENT @4 assigne expression .  [':', ')', ';', ',']
   43 op_binair: . PLUS
   44          | . MOINS
   45          | . MUL
   46          | . DIV
   47          | . MODULO
   48          | . EGALE3
   49          | . INF
   50          | . SUP
   51          | . DIFF
   52          | . ET
   53          | . OU
   54          | . PUISSANCE
   55          | . SUP_EG
   56          | . INF_EG

    PLUS       décalage et aller à l'état 42
    MOINS      décalage et aller à l'état 43
    MUL        décalage et aller à l'état 44
    DIV        décalage et aller à l'état 45
    MODULO     décalage et aller à l'état 46
    PUISSANCE  décalage et aller à l'état 47
    ET         décalage et aller à l'état 48
    OU         décalage et aller à l'état 49
    EGALE3     décalage et aller à l'état 50
    SUP        décalage et aller à l'état 51
    INF        décalage et aller à l'état 52
    DIFF       décalage et aller à l'état 53
    SUP_EG     décalage et aller à l'état 54
    INF_EG     décalage et aller à l'état 55
    '?'        décalage et aller à l'état 56

    $défaut  réduction par utilisation de la règle 32 (expression)

    op_binair  aller à l'état 57

    Conflit entre la règle 32 et le jeton PLUS résolu par décalage (AFFECT < PLUS).
    Conflit entre la règle 32 et le jeton MOINS résolu par décalage (AFFECT < MOINS).
    Conflit entre la règle 32 et le jeton MUL résolu par décalage (AFFECT < MUL).
    Conflit entre la règle 32 et le jeton DIV résolu par décalage (AFFECT < DIV).
    Conflit entre la règle 32 et le jeton MODULO résolu par décalage (AFFECT < MODULO).
    Conflit entre la règle 32 et le jeton PUISSANCE résolu par décalage (AFFECT < PUISSANCE).
    Conflit entre la règle 32 et le jeton ET résolu par décalage (AFFECT < ET).
    Conflit entre la règle 32 et le jeton OU résolu par décalage (AFFECT < OU).
    Conflit entre la règle 32 et le jeton EGALE3 résolu par décalage (AFFECT < EGALE3).
    Conflit entre la règle 32 et le jeton SUP résolu par décalage (AFFECT < SUP).
    Conflit entre la règle 32 et le jeton INF résolu par décalage (AFFECT < INF).
    Conflit entre la règle 32 et le jeton DIFF résolu par décalage (AFFECT < DIFF).
    Conflit entre la règle 32 et le jeton SUP_EG résolu par décalage (AFFECT < SUP_EG).
    Conflit entre la règle 32 et le jeton INF_EG résolu par décalage (AFFECT < INF_EG).
    Conflit entre la règle 32 et le jeton '?' résolu par décalage (AFFECT < '?').


État 83

    4 commande: . ';'
    5         | . affect_expr ';'
    7         | . FONCTION IDENT @1 '(' arguments ')' '{' programme '}'
    8         | . '{' programme '}'
    9         | . SI '(' expression ')' commande
    9         | SI '(' expression ')' . commande
   10         | . SI '(' expression ')' commande SINON commande
   10         | SI '(' expression ')' . commande SINON commande
   11         | . BREAK ';'
   12         | . TANTQUE '(' expression ')' commande
   13         | . FAIRE commande TANTQUE '(' expression ')'
   14         | . RETOURNER '(' expression ')' ';'
   15         | . POUR '(' affect_expr ';' expression ';' expression ')' commande
   16         | . ECRIRE '(' expression ')' ';'
   17 affect_expr: . expression
   19            | . VAR IDENT @2 AFFECT expression
   20            | . VAR IDENT
   21 expression: . NOMBRE
   22           | . BOOLEEN
   23           | . STRING
   24           | . IDENT
   25           | . '(' expression ')'
   27           | . IDENT @3 '(' expressions ')'
   28           | . op_unair expression
   29           | . expression op_binair expression
   30           | . expression '?' expression ':' expression
   32           | . IDENT @4 assigne expression
   40 op_unair: . MOINS
   41         | . NON
   42         | . TYPEOF

    NOMBRE     décalage et aller à l'état 1
    IDENT      décalage et aller à l'état 2
    BOOLEEN    décalage et aller à l'état 3
    STRING     décalage et aller à l'état 4
    SI         décalage et aller à l'état 5
    FAIRE      décalage et aller à l'état 6
    POUR       décalage et aller à l'état 7
    TANTQUE    décalage et aller à l'état 8
    ECRIRE     décalage et aller à l'état 9
    VAR        décalage et aller à l'état 10
    FONCTION   décalage et aller à l'état 11
    BREAK      décalage et aller à l'état 12
    RETOURNER  décalage et aller à l'état 13
    NON        décalage et aller à l'état 14
    TYPEOF     décalage et aller à l'état 15
    MOINS      décalage et aller à l'état 16
    '('        décalage et aller à l'état 17
    ';'        décalage et aller à l'état 18
    '{'        décalage et aller à l'état 19

    commande     aller à l'état 94
    affect_expr  aller à l'état 23
    expression   aller à l'état 24
    op_unair     aller à l'état 25


État 84

   13 commande: FAIRE commande TANTQUE '(' . expression ')'
   21 expression: . NOMBRE
   22           | . BOOLEEN
   23           | . STRING
   24           | . IDENT
   25           | . '(' expression ')'
   27           | . IDENT @3 '(' expressions ')'
   28           | . op_unair expression
   29           | . expression op_binair expression
   30           | . expression '?' expression ':' expression
   32           | . IDENT @4 assigne expression
   40 op_unair: . MOINS
   41         | . NON
   42         | . TYPEOF

    NOMBRE   décalage et aller à l'état 1
    IDENT    décalage et aller à l'état 2
    BOOLEEN  décalage et aller à l'état 3
    STRING   décalage et aller à l'état 4
    NON      décalage et aller à l'état 14
    TYPEOF   décalage et aller à l'état 15
    MOINS    décalage et aller à l'état 16
    '('      décalage et aller à l'état 17

    expression  aller à l'état 95
    op_unair    aller à l'état 25


État 85

   15 commande: POUR '(' affect_expr ';' . expression ';' expression ')' commande
   21 expression: . NOMBRE
   22           | . BOOLEEN
   23           | . STRING
   24           | . IDENT
   25           | . '(' expression ')'
   27           | . IDENT @3 '(' expressions ')'
   28           | . op_unair expression
   29           | . expression op_binair expression
   30           | . expression '?' expression ':' expression
   32           | . IDENT @4 assigne expression
   40 op_unair: . MOINS
   41         | . NON
   42         | . TYPEOF

    NOMBRE   décalage et aller à l'état 1
    IDENT    décalage et aller à l'état 2
    BOOLEEN  décalage et aller à l'état 3
    STRING   décalage et aller à l'état 4
    NON      décalage et aller à l'état 14
    TYPEOF   décalage et aller à l'état 15
    MOINS    décalage et aller à l'état 16
    '('      décalage et aller à l'état 17

    expression  aller à l'état 96
    op_unair    aller à l'état 25


État 86

    4 commande: . ';'
    5         | . affect_expr ';'
    7         | . FONCTION IDENT @1 '(' arguments ')' '{' programme '}'
    8         | . '{' programme '}'
    9         | . SI '(' expression ')' commande
   10         | . SI '(' expression ')' commande SINON commande
   11         | . BREAK ';'
   12         | . TANTQUE '(' expression ')' commande
   12         | TANTQUE '(' expression ')' . commande
   13         | . FAIRE commande TANTQUE '(' expression ')'
   14         | . RETOURNER '(' expression ')' ';'
   15         | . POUR '(' affect_expr ';' expression ';' expression ')' commande
   16         | . ECRIRE '(' expression ')' ';'
   17 affect_expr: . expression
   19            | . VAR IDENT @2 AFFECT expression
   20            | . VAR IDENT
   21 expression: . NOMBRE
   22           | . BOOLEEN
   23           | . STRING
   24           | . IDENT
   25           | . '(' expression ')'
   27           | . IDENT @3 '(' expressions ')'
   28           | . op_unair expression
   29           | . expression op_binair expression
   30           | . expression '?' expression ':' expression
   32           | . IDENT @4 assigne expression
   40 op_unair: . MOINS
   41         | . NON
   42         | . TYPEOF

    NOMBRE     décalage et aller à l'état 1
    IDENT      décalage et aller à l'état 2
    BOOLEEN    décalage et aller à l'état 3
    STRING     décalage et aller à l'état 4
    SI         décalage et aller à l'état 5
    FAIRE      décalage et aller à l'état 6
    POUR       décalage et aller à l'état 7
    TANTQUE    décalage et aller à l'état 8
    ECRIRE     décalage et aller à l'état 9
    VAR        décalage et aller à l'état 10
    FONCTION   décalage et aller à l'état 11
    BREAK      décalage et aller à l'état 12
    RETOURNER  décalage et aller à l'état 13
    NON        décalage et aller à l'état 14
    TYPEOF     décalage et aller à l'état 15
    MOINS      décalage et aller à l'état 16
    '('        décalage et aller à l'état 17
    ';'        décalage et aller à l'état 18
    '{'        décalage et aller à l'état 19

    commande     aller à l'état 97
    affect_expr  aller à l'état 23
    expression   aller à l'état 24
    op_unair     aller à l'état 25


État 87

   16 commande: ECRIRE '(' expression ')' . ';'

    ';'  décalage et aller à l'état 98


État 88

   19 affect_expr: VAR IDENT @2 AFFECT . expression
   21 expression: . NOMBRE
   22           | . BOOLEEN
   23           | . STRING
   24           | . IDENT
   25           | . '(' expression ')'
   27           | . IDENT @3 '(' expressions ')'
   28           | . op_unair expression
   29           | . expression op_binair expression
   30           | . expression '?' expression ':' expression
   32           | . IDENT @4 assigne expression
   40 op_unair: . MOINS
   41         | . NON
   42         | . TYPEOF

    NOMBRE   décalage et aller à l'état 1
    IDENT    décalage et aller à l'état 2
    BOOLEEN  décalage et aller à l'état 3
    STRING   décalage et aller à l'état 4
    NON      décalage et aller à l'état 14
    TYPEOF   décalage et aller à l'état 15
    MOINS    décalage et aller à l'état 16
    '('      décalage et aller à l'état 17

    expression  aller à l'état 99
    op_unair    aller à l'état 25


État 89

    7 commande: FONCTION IDENT @1 '(' . arguments ')' '{' programme '}'
   36 arguments: . %empty  [')']
   37          | . IDENT
   39          | . IDENT @5 ',' arguments

    IDENT  décalage et aller à l'état 100

    $défaut  réduction par utilisation de la règle 36 (arguments)

    arguments  aller à l'état 101


État 90

   14 commande: RETOURNER '(' expression ')' . ';'

    ';'  décalage et aller à l'état 102


État 91

   21 expression: . NOMBRE
   22           | . BOOLEEN
   23           | . STRING
   24           | . IDENT
   25           | . '(' expression ')'
   27           | . IDENT @3 '(' expressions ')'
   28           | . op_unair expression
   29           | . expression op_binair expression
   30           | . expression '?' expression ':' expression
   30           | expression '?' expression ':' . expression
   32           | . IDENT @4 assigne expression
   40 op_unair: . MOINS
   41         | . NON
   42         | . TYPEOF

    NOMBRE   décalage et aller à l'état 1
    IDENT    décalage et aller à l'état 2
    BOOLEEN  décalage et aller à l'état 3
    STRING   décalage et aller à l'état 4
    NON      décalage et aller à l'état 14
    TYPEOF   décalage et aller à l'état 15
    MOINS    décalage et aller à l'état 16
    '('      décalage et aller à l'état 17

    expression  aller à l'état 103
    op_unair    aller à l'état 25


État 92

   21 expression: . NOMBRE
   22           | . BOOLEEN
   23           | . STRING
   24           | . IDENT
   25           | . '(' expression ')'
   27           | . IDENT @3 '(' expressions ')'
   28           | . op_unair expression
   29           | . expression op_binair expression
   30           | . expression '?' expression ':' expression
   32           | . IDENT @4 assigne expression
   33 expressions: . %empty  [')']
   34            | . expression
   35            | . expression ',' expressions
   35            | expression ',' . expressions
   40 op_unair: . MOINS
   41         | . NON
   42         | . TYPEOF

    NOMBRE   décalage et aller à l'état 1
    IDENT    décalage et aller à l'état 2
    BOOLEEN  décalage et aller à l'état 3
    STRING   décalage et aller à l'état 4
    NON      décalage et aller à l'état 14
    TYPEOF   décalage et aller à l'état 15
    MOINS    décalage et aller à l'état 16
    '('      décalage et aller à l'état 17

    $défaut  réduction par utilisation de la règle 33 (expressions)

    expression   aller à l'état 80
    expressions  aller à l'état 104
    op_unair     aller à l'état 25


État 93

   27 expression: IDENT @3 '(' expressions ')' .

    $défaut  réduction par utilisation de la règle 27 (expression)


État 94

    9 commande: SI '(' expression ')' commande .  [$end, NOMBRE, IDENT, BOOLEEN, STRING, SI, FAIRE, POUR, TANTQUE, ECRIRE, VAR, FONCTION, BREAK, RETOURNER, NON, TYPEOF, MOINS, '(', ';', '{', '}']
   10         | SI '(' expression ')' commande . SINON commande

    SINON  décalage et aller à l'état 105

    $défaut  réduction par utilisation de la règle 9 (commande)

    Conflit entre la règle 9 et le jeton SINON résolu par décalage (%right SINON).


État 95

   13 commande: FAIRE commande TANTQUE '(' expression . ')'
   29 expression: expression . op_binair expression
   30           | expression . '?' expression ':' expression
   43 op_binair: . PLUS
   44          | . MOINS
   45          | . MUL
   46          | . DIV
   47          | . MODULO
   48          | . EGALE3
   49          | . INF
   50          | . SUP
   51          | . DIFF
   52          | . ET
   53          | . OU
   54          | . PUISSANCE
   55          | . SUP_EG
   56          | . INF_EG

    PLUS       décalage et aller à l'état 42
    MOINS      décalage et aller à l'état 43
    MUL        décalage et aller à l'état 44
    DIV        décalage et aller à l'état 45
    MODULO     décalage et aller à l'état 46
    PUISSANCE  décalage et aller à l'état 47
    ET         décalage et aller à l'état 48
    OU         décalage et aller à l'état 49
    EGALE3     décalage et aller à l'état 50
    SUP        décalage et aller à l'état 51
    INF        décalage et aller à l'état 52
    DIFF       décalage et aller à l'état 53
    SUP_EG     décalage et aller à l'état 54
    INF_EG     décalage et aller à l'état 55
    '?'        décalage et aller à l'état 56
    ')'        décalage et aller à l'état 106

    op_binair  aller à l'état 57


État 96

   15 commande: POUR '(' affect_expr ';' expression . ';' expression ')' commande
   29 expression: expression . op_binair expression
   30           | expression . '?' expression ':' expression
   43 op_binair: . PLUS
   44          | . MOINS
   45          | . MUL
   46          | . DIV
   47          | . MODULO
   48          | . EGALE3
   49          | . INF
   50          | . SUP
   51          | . DIFF
   52          | . ET
   53          | . OU
   54          | . PUISSANCE
   55          | . SUP_EG
   56          | . INF_EG

    PLUS       décalage et aller à l'état 42
    MOINS      décalage et aller à l'état 43
    MUL        décalage et aller à l'état 44
    DIV        décalage et aller à l'état 45
    MODULO     décalage et aller à l'état 46
    PUISSANCE  décalage et aller à l'état 47
    ET         décalage et aller à l'état 48
    OU         décalage et aller à l'état 49
    EGALE3     décalage et aller à l'état 50
    SUP        décalage et aller à l'état 51
    INF        décalage et aller à l'état 52
    DIFF       décalage et aller à l'état 53
    SUP_EG     décalage et aller à l'état 54
    INF_EG     décalage et aller à l'état 55
    '?'        décalage et aller à l'état 56
    ';'        décalage et aller à l'état 107

    op_binair  aller à l'état 57


État 97

   12 commande: TANTQUE '(' expression ')' commande .

    $défaut  réduction par utilisation de la règle 12 (commande)


État 98

   16 commande: ECRIRE '(' expression ')' ';' .

    $défaut  réduction par utilisation de la règle 16 (commande)


État 99

   19 affect_expr: VAR IDENT @2 AFFECT expression .  [';']
   29 expression: expression . op_binair expression
   30           | expression . '?' expression ':' expression
   43 op_binair: . PLUS
   44          | . MOINS
   45          | . MUL
   46          | . DIV
   47          | . MODULO
   48          | . EGALE3
   49          | . INF
   50          | . SUP
   51          | . DIFF
   52          | . ET
   53          | . OU
   54          | . PUISSANCE
   55          | . SUP_EG
   56          | . INF_EG

    PLUS       décalage et aller à l'état 42
    MOINS      décalage et aller à l'état 43
    MUL        décalage et aller à l'état 44
    DIV        décalage et aller à l'état 45
    MODULO     décalage et aller à l'état 46
    PUISSANCE  décalage et aller à l'état 47
    ET         décalage et aller à l'état 48
    OU         décalage et aller à l'état 49
    EGALE3     décalage et aller à l'état 50
    SUP        décalage et aller à l'état 51
    INF        décalage et aller à l'état 52
    DIFF       décalage et aller à l'état 53
    SUP_EG     décalage et aller à l'état 54
    INF_EG     décalage et aller à l'état 55
    '?'        décalage et aller à l'état 56

    $défaut  réduction par utilisation de la règle 19 (affect_expr)

    op_binair  aller à l'état 57


État 100

   37 arguments: IDENT .  [')']
   38 @5: . %empty  [',']
   39 arguments: IDENT . @5 ',' arguments

    ','       réduction par utilisation de la règle 38 (@5)
    $défaut  réduction par utilisation de la règle 37 (arguments)

    @5  aller à l'état 108


État 101

    7 commande: FONCTION IDENT @1 '(' arguments . ')' '{' programme '}'

    ')'  décalage et aller à l'état 109


État 102

   14 commande: RETOURNER '(' expression ')' ';' .

    $défaut  réduction par utilisation de la règle 14 (commande)


État 103

   29 expression: expression . op_binair expression
   30           | expression . '?' expression ':' expression
   30           | expression '?' expression ':' expression .  [PLUS, MOINS, MUL, DIV, MODULO, PUISSANCE, ET, OU, EGALE3, SUP, INF, DIFF, SUP_EG, INF_EG, '?', ':', ')', ';', ',']
   43 op_binair: . PLUS
   44          | . MOINS
   45          | . MUL
   46          | . DIV
   47          | . MODULO
   48          | . EGALE3
   49          | . INF
   50          | . SUP
   51          | . DIFF
   52          | . ET
   53          | . OU
   54          | . PUISSANCE
   55          | . SUP_EG
   56          | . INF_EG

    $défaut  réduction par utilisation de la règle 30 (expression)

    op_binair  aller à l'état 57

    Conflit entre la règle 30 et le jeton PLUS résolu par réduction (PLUS < PRIO2).
    Conflit entre la règle 30 et le jeton MOINS résolu par réduction (MOINS < PRIO2).
    Conflit entre la règle 30 et le jeton MUL résolu par réduction (MUL < PRIO2).
    Conflit entre la règle 30 et le jeton DIV résolu par réduction (DIV < PRIO2).
    Conflit entre la règle 30 et le jeton MODULO résolu par réduction (MODULO < PRIO2).
    Conflit entre la règle 30 et le jeton PUISSANCE résolu par réduction (PUISSANCE < PRIO2).
    Conflit entre la règle 30 et le jeton ET résolu par réduction (ET < PRIO2).
    Conflit entre la règle 30 et le jeton OU résolu par réduction (OU < PRIO2).
    Conflit entre la règle 30 et le jeton EGALE3 résolu par réduction (EGALE3 < PRIO2).
    Conflit entre la règle 30 et le jeton SUP résolu par réduction (SUP < PRIO2).
    Conflit entre la règle 30 et le jeton INF résolu par réduction (INF < PRIO2).
    Conflit entre la règle 30 et le jeton DIFF résolu par réduction (DIFF < PRIO2).
    Conflit entre la règle 30 et le jeton SUP_EG résolu par réduction (SUP_EG < PRIO2).
    Conflit entre la règle 30 et le jeton INF_EG résolu par réduction (INF_EG < PRIO2).
    Conflit entre la règle 30 et le jeton '?' résolu par réduction ('?' < PRIO2).


État 104

   35 expressions: expression ',' expressions .

    $défaut  réduction par utilisation de la règle 35 (expressions)


État 105

    4 commande: . ';'
    5         | . affect_expr ';'
    7         | . FONCTION IDENT @1 '(' arguments ')' '{' programme '}'
    8         | . '{' programme '}'
    9         | . SI '(' expression ')' commande
   10         | . SI '(' expression ')' commande SINON commande
   10         | SI '(' expression ')' commande SINON . commande
   11         | . BREAK ';'
   12         | . TANTQUE '(' expression ')' commande
   13         | . FAIRE commande TANTQUE '(' expression ')'
   14         | . RETOURNER '(' expression ')' ';'
   15         | . POUR '(' affect_expr ';' expression ';' expression ')' commande
   16         | . ECRIRE '(' expression ')' ';'
   17 affect_expr: . expression
   19            | . VAR IDENT @2 AFFECT expression
   20            | . VAR IDENT
   21 expression: . NOMBRE
   22           | . BOOLEEN
   23           | . STRING
   24           | . IDENT
   25           | . '(' expression ')'
   27           | . IDENT @3 '(' expressions ')'
   28           | . op_unair expression
   29           | . expression op_binair expression
   30           | . expression '?' expression ':' expression
   32           | . IDENT @4 assigne expression
   40 op_unair: . MOINS
   41         | . NON
   42         | . TYPEOF

    NOMBRE     décalage et aller à l'état 1
    IDENT      décalage et aller à l'état 2
    BOOLEEN    décalage et aller à l'état 3
    STRING     décalage et aller à l'état 4
    SI         décalage et aller à l'état 5
    FAIRE      décalage et aller à l'état 6
    POUR       décalage et aller à l'état 7
    TANTQUE    décalage et aller à l'état 8
    ECRIRE     décalage et aller à l'état 9
    VAR        décalage et aller à l'état 10
    FONCTION   décalage et aller à l'état 11
    BREAK      décalage et aller à l'état 12
    RETOURNER  décalage et aller à l'état 13
    NON        décalage et aller à l'état 14
    TYPEOF     décalage et aller à l'état 15
    MOINS      décalage et aller à l'état 16
    '('        décalage et aller à l'état 17
    ';'        décalage et aller à l'état 18
    '{'        décalage et aller à l'état 19

    commande     aller à l'état 110
    affect_expr  aller à l'état 23
    expression   aller à l'état 24
    op_unair     aller à l'état 25


État 106

   13 commande: FAIRE commande TANTQUE '(' expression ')' .

    $défaut  réduction par utilisation de la règle 13 (commande)


État 107

   15 commande: POUR '(' affect_expr ';' expression ';' . expression ')' commande
   21 expression: . NOMBRE
   22           | . BOOLEEN
   23           | . STRING
   24           | . IDENT
   25           | . '(' expression ')'
   27           | . IDENT @3 '(' expressions ')'
   28           | . op_unair expression
   29           | . expression op_binair expression
   30           | . expression '?' expression ':' expression
   32           | . IDENT @4 assigne expression
   40 op_unair: . MOINS
   41         | . NON
   42         | . TYPEOF

    NOMBRE   décalage et aller à l'état 1
    IDENT    décalage et aller à l'état 2
    BOOLEEN  décalage et aller à l'état 3
    STRING   décalage et aller à l'état 4
    NON      décalage et aller à l'état 14
    TYPEOF   décalage et aller à l'état 15
    MOINS    décalage et aller à l'état 16
    '('      décalage et aller à l'état 17

    expression  aller à l'état 111
    op_unair    aller à l'état 25


État 108

   39 arguments: IDENT @5 . ',' arguments

    ','  décalage et aller à l'état 112


État 109

    7 commande: FONCTION IDENT @1 '(' arguments ')' . '{' programme '}'

    '{'  décalage et aller à l'état 113


État 110

   10 commande: SI '(' expression ')' commande SINON commande .

    $défaut  réduction par utilisation de la règle 10 (commande)


État 111

   15 commande: POUR '(' affect_expr ';' expression ';' expression . ')' commande
   29 expression: expression . op_binair expression
   30           | expression . '?' expression ':' expression
   43 op_binair: . PLUS
   44          | . MOINS
   45          | . MUL
   46          | . DIV
   47          | . MODULO
   48          | . EGALE3
   49          | . INF
   50          | . SUP
   51          | . DIFF
   52          | . ET
   53          | . OU
   54          | . PUISSANCE
   55          | . SUP_EG
   56          | . INF_EG

    PLUS       décalage et aller à l'état 42
    MOINS      décalage et aller à l'état 43
    MUL        décalage et aller à l'état 44
    DIV        décalage et aller à l'état 45
    MODULO     décalage et aller à l'état 46
    PUISSANCE  décalage et aller à l'état 47
    ET         décalage et aller à l'état 48
    OU         décalage et aller à l'état 49
    EGALE3     décalage et aller à l'état 50
    SUP        décalage et aller à l'état 51
    INF        décalage et aller à l'état 52
    DIFF       décalage et aller à l'état 53
    SUP_EG     décalage et aller à l'état 54
    INF_EG     décalage et aller à l'état 55
    '?'        décalage et aller à l'état 56
    ')'        décalage et aller à l'état 114

    op_binair  aller à l'état 57


État 112

   36 arguments: . %empty  [')']
   37          | . IDENT
   39          | . IDENT @5 ',' arguments
   39          | IDENT @5 ',' . arguments

    IDENT  décalage et aller à l'état 100

    $défaut  réduction par utilisation de la règle 36 (arguments)

    arguments  aller à l'état 115


État 113

    2 programme: . commande
    3          | . commande programme
    4 commande: . ';'
    5         | . affect_expr ';'
    7         | . FONCTION IDENT @1 '(' arguments ')' '{' programme '}'
    7         | FONCTION IDENT @1 '(' arguments ')' '{' . programme '}'
    8         | . '{' programme '}'
    9         | . SI '(' expression ')' commande
   10         | . SI '(' expression ')' commande SINON commande
   11         | . BREAK ';'
   12         | . TANTQUE '(' expression ')' commande
   13         | . FAIRE commande TANTQUE '(' expression ')'
   14         | . RETOURNER '(' expression ')' ';'
   15         | . POUR '(' affect_expr ';' expression ';' expression ')' commande
   16         | . ECRIRE '(' expression ')' ';'
   17 affect_expr: . expression
   19            | . VAR IDENT @2 AFFECT expression
   20            | . VAR IDENT
   21 expression: . NOMBRE
   22           | . BOOLEEN
   23           | . STRING
   24           | . IDENT
   25           | . '(' expression ')'
   27           | . IDENT @3 '(' expressions ')'
   28           | . op_unair expression
   29           | . expression op_binair expression
   30           | . expression '?' expression ':' expression
   32           | . IDENT @4 assigne expression
   40 op_unair: . MOINS
   41         | . NON
   42         | . TYPEOF

    NOMBRE     décalage et aller à l'état 1
    IDENT      décalage et aller à l'état 2
    BOOLEEN    décalage et aller à l'état 3
    STRING     décalage et aller à l'état 4
    SI         décalage et aller à l'état 5
    FAIRE      décalage et aller à l'état 6
    POUR       décalage et aller à l'état 7
    TANTQUE    décalage et aller à l'état 8
    ECRIRE     décalage et aller à l'état 9
    VAR        décalage et aller à l'état 10
    FONCTION   décalage et aller à l'état 11
    BREAK      décalage et aller à l'état 12
    RETOURNER  décalage et aller à l'état 13
    NON        décalage et aller à l'état 14
    TYPEOF     décalage et aller à l'état 15
    MOINS      décalage et aller à l'état 16
    '('        décalage et aller à l'état 17
    ';'        décalage et aller à l'état 18
    '{'        décalage et aller à l'état 19

    programme    aller à l'état 116
    commande     aller à l'état 22
    affect_expr  aller à l'état 23
    expression   aller à l'état 24
    op_unair     aller à l'état 25


État 114

    4 commande: . ';'
    5         | . affect_expr ';'
    7         | . FONCTION IDENT @1 '(' arguments ')' '{' programme '}'
    8         | . '{' programme '}'
    9         | . SI '(' expression ')' commande
   10         | . SI '(' expression ')' commande SINON commande
   11         | . BREAK ';'
   12         | . TANTQUE '(' expression ')' commande
   13         | . FAIRE commande TANTQUE '(' expression ')'
   14         | . RETOURNER '(' expression ')' ';'
   15         | . POUR '(' affect_expr ';' expression ';' expression ')' commande
   15         | POUR '(' affect_expr ';' expression ';' expression ')' . commande
   16         | . ECRIRE '(' expression ')' ';'
   17 affect_expr: . expression
   19            | . VAR IDENT @2 AFFECT expression
   20            | . VAR IDENT
   21 expression: . NOMBRE
   22           | . BOOLEEN
   23           | . STRING
   24           | . IDENT
   25           | . '(' expression ')'
   27           | . IDENT @3 '(' expressions ')'
   28           | . op_unair expression
   29           | . expression op_binair expression
   30           | . expression '?' expression ':' expression
   32           | . IDENT @4 assigne expression
   40 op_unair: . MOINS
   41         | . NON
   42         | . TYPEOF

    NOMBRE     décalage et aller à l'état 1
    IDENT      décalage et aller à l'état 2
    BOOLEEN    décalage et aller à l'état 3
    STRING     décalage et aller à l'état 4
    SI         décalage et aller à l'état 5
    FAIRE      décalage et aller à l'état 6
    POUR       décalage et aller à l'état 7
    TANTQUE    décalage et aller à l'état 8
    ECRIRE     décalage et aller à l'état 9
    VAR        décalage et aller à l'état 10
    FONCTION   décalage et aller à l'état 11
    BREAK      décalage et aller à l'état 12
    RETOURNER  décalage et aller à l'état 13
    NON        décalage et aller à l'état 14
    TYPEOF     décalage et aller à l'état 15
    MOINS      décalage et aller à l'état 16
    '('        décalage et aller à l'état 17
    ';'        décalage et aller à l'état 18
    '{'        décalage et aller à l'état 19

    commande     aller à l'état 117
    affect_expr  aller à l'état 23
    expression   aller à l'état 24
    op_unair     aller à l'état 25


État 115

   39 arguments: IDENT @5 ',' arguments .

    $défaut  réduction par utilisation de la règle 39 (arguments)


État 116

    7 commande: FONCTION IDENT @1 '(' arguments ')' '{' programme . '}'

    '}'  décalage et aller à l'état 118


État 117

   15 commande: POUR '(' affect_expr ';' expression ';' expression ')' commande .

    $défaut  réduction par utilisation de la règle 15 (commande)


État 118

    7 commande: FONCTION IDENT @1 '(' arguments ')' '{' programme '}' .

    $défaut  réduction par utilisation de la règle 7 (commande)
